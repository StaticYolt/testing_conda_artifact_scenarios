name: package_env

on:
  workflow_call:
    inputs:
      version: # the variable you can use in place of a matrix
        required: true
        type: string

jobs:
  download_conda_packd_envs:
    #inputs.version is from the workflow call from the main yml file
    name: ${{ inputs.version }} Python for Conda packed env
    runs-on: ubuntu-latest
    outputs:
      test_conda_packed_name: ${{ env.TEST_ENV_NAME }}
    env:
      TZ: America/New_York

#    defaults:
#      run:
#        shell: bash -lvxeo pipefail {0}

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install YAML CLI tools
        run: |
          python3 -m pip install shyaml
          python3 -m pip install requests

      - name: Set env vars
        # Most importantly creates the Conda Environment name whose format is year-version-pythonversion-tiled
        run: |
          set -vxeuo pipefail

          export REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}  # just the repo, as opposed to org/repo
          echo "REPOSITORY_NAME=${REPOSITORY_NAME}" >> $GITHUB_ENV

          export DATETIME_STRING=$(date +%Y%m%d%H%M%S)
          echo "DATETIME_STRING=${DATETIME_STRING}" >> $GITHUB_ENV

          export PYTHONVER=$(echo ${{ inputs.version }} | sed 's/\.//g')
          echo "PYTHONVER=${PYTHONVER}" >> $GITHUB_ENV

          export CONDA_PACK_TEMPLATE_DIR=${HOME}/conda-pack-template
          echo "CONDA_PACK_TEMPLATE_DIR=${CONDA_PACK_TEMPLATE_DIR}" >> $GITHUB_ENV

          env_name=$(cat configs/config-py${PYTHONVER}.yml | shyaml get-value env_name)
          export CONDA_PACK_ENV_NAME=${env_name}
          echo "CONDA_PACK_ENV_NAME=${CONDA_PACK_ENV_NAME}" >> $GITHUB_ENV
  
          env | sort -u
          echo "$GITHUB_ENV"
          

      - name: Download Artifacts From Zenodo
        run: |
          export ARTIFACTS_DIR="$HOME/artifacts"
          echo "ARTIFACTS_DIR=${ARTIFACTS_DIR}" >> $GITHUB_ENV
          if [ ! -d "${ARTIFACTS_DIR}" ]; then
              mkdir -v -p "${ARTIFACTS_DIR}"
          fi
          python3 download_from_zenodo.py -r "12207275" -a "${{ secrets.ZENODO_TOKEN }}"
          pwd
          ls
          ls ${ARTIFACTS_DIR}

      - name: Contents of the env .yml file
        run: |
          cat ${ARTIFACTS_DIR}/${CONDA_PACK_ENV_NAME}.yml

      - name: Checksum files
        run: |
          cat ${ARTIFACTS_DIR}/*sum.txt

      # https://github.com/actions/upload-artifact
      - name: Upload artifacts for the env .yml file
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.CONDA_PACK_ENV_NAME }}.yml
          path: ${{ env.ARTIFACTS_DIR }}/${{ env.CONDA_PACK_ENV_NAME }}.yml
          retention-days: 60

      - name: Upload artifacts for branch
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.CONDA_PACK_ENV_NAME }}
          path: ${{ env.ARTIFACTS_DIR }}
          retention-days: 14

      - name: passing output
        run: echo "TEST_ENV_NAME=${{ env.CONDA_PACK_ENV_NAME }}" >> $GITHUB_ENV

  testing_conda_artifact:
    name: ${{ matrix.repos.beamline_acronym }}-${{ inputs.version }}
    needs: download_conda_packd_envs
    env:
      REPO_URL: "https://github.com/${{matrix.repos.org}}/${{matrix.repos.repo}}"
    strategy:
      fail-fast: false
      matrix:
        repos:
          - org: "NSLS-II-CSX"
            repo: "profile_collection"
            branch: "master"
            beamline_acronym: "csx"
          - org: "NSLS-II-SRX"
            repo: "profile_collection"
            branch: "master"
            beamline_acronym: "srx"
          - org: "NSLS-II-SIX"
            repo: "profile_collection"
            branch: "master"
            beamline_acronym: "six"
          - org: "NSLS-II-HXN"
            repo: "profile_collection"
            branch: "master"
            beamline_acronym: "hxn"
          - org: "NSLS-II-ISR"
            repo: "profile_analysis"
            branch: "master"
            beamline_acronym: "isr"
          - org: "NSLS-II-BMD"
            repo: "profile_collection"
            branch: "master"
            beamline_acronym: "bmm"
          - org: "NSLS-II-QAS"
            repo: "profile_collection"
            branch: "master"
            beamline_acronym: "qas"
    runs-on: ubuntu-latest
    steps:
      -
      - run: echo "TEST_CONDA_PACKED_NAME=${{ needs.download_conda_packd_envs.outputs.test_conda_packed_name }}" >> $GITHUB_ENV
      - name: using test-action
        uses: StaticYolt/testing-conda-environment@v1.2.8
        with:
          run-id: "${{ github.run_id }}"
          test-conda-packed-name: "${{ env.TEST_CONDA_PACKED_NAME }}"
          org: "${{ matrix.repos.org }}"
          repo: "${{ matrix.repos.repo }}"
          branch: "${{ matrix.repos.branch }}"
          beamline-acronym: "${{ matrix.repos.beamline_acronym }}"
  report_generation:
    needs: testing_conda_artifact
    if: |
      always() &&
      (needs.testing_conda_artifact.result == 'success' || needs.testing_conda_artifact.result == 'failure')
    runs-on: ubuntu-latest
    steps:
      - name: Free disk space
        run: |
          sudo apt-get remove aria2 ansible azure-cli shellcheck rpm xorriso zsync \
            clang-6.0 lldb-6.0 lld-6.0 clang-format-6.0 clang-8 lldb-8 lld-8 clang-format-8 \
            clang-9 lldb-9 lld-9 clangd-9 clang-format-9 dotnet-sdk-3.0 dotnet-sdk-3.1=3.1.101-1 \
            esl-erlang firefox g++-8 g++-9 gfortran-8 gfortran-9 google-chrome-stable \
            google-cloud-sdk ghc-8.0.2 ghc-8.2.2 ghc-8.4.4 ghc-8.6.2 ghc-8.6.3 ghc-8.6.4 \
            ghc-8.6.5 ghc-8.8.1 ghc-8.8.2 ghc-8.8.3 ghc-8.10.1 cabal-install-2.0 cabal-install-2.2 \
            cabal-install-2.4 cabal-install-3.0 cabal-install-3.2 heroku imagemagick \
            libmagickcore-dev libmagickwand-dev libmagic-dev ant ant-optional kubectl \
            mercurial apt-transport-https mono-complete mysql-client libmysqlclient-dev \
            mysql-server mssql-tools unixodbc-dev yarn bazel chrpath libssl-dev libxft-dev \
            libfreetype6 libfreetype6-dev libfontconfig1 libfontconfig1-dev php7.1 php7.1-bcmath \
            php7.1-bz2 php7.1-cgi php7.1-cli php7.1-common php7.1-curl php7.1-dba php7.1-dev \
            php7.1-enchant php7.1-fpm php7.1-gd php7.1-gmp php7.1-imap php7.1-interbase php7.1-intl \
            php7.1-json php7.1-ldap php7.1-mbstring php7.1-mcrypt php7.1-mysql php7.1-odbc \
            php7.1-opcache php7.1-pgsql php7.1-phpdbg php7.1-pspell php7.1-readline php7.1-recode \
            php7.1-snmp php7.1-soap php7.1-sqlite3 php7.1-sybase php7.1-tidy php7.1-xml \
            php7.1-xmlrpc php7.1-xsl php7.1-zip php7.2 php7.2-bcmath php7.2-bz2 php7.2-cgi \
            php7.2-cli php7.2-common php7.2-curl php7.2-dba php7.2-dev php7.2-enchant php7.2-fpm \
            php7.2-gd php7.2-gmp php7.2-imap php7.2-interbase php7.2-intl php7.2-json php7.2-ldap \
            php7.2-mbstring php7.2-mysql php7.2-odbc php7.2-opcache php7.2-pgsql php7.2-phpdbg \
            php7.2-pspell php7.2-readline php7.2-recode php7.2-snmp php7.2-soap php7.2-sqlite3 \
            php7.2-sybase php7.2-tidy php7.2-xml php7.2-xmlrpc php7.2-xsl php7.2-zip php7.3 \
            php7.3-bcmath php7.3-bz2 php7.3-cgi php7.3-cli php7.3-common php7.3-curl php7.3-dba \
            php7.3-dev php7.3-enchant php7.3-fpm php7.3-gd php7.3-gmp php7.3-imap php7.3-interbase \
            php7.3-intl php7.3-json php7.3-ldap php7.3-mbstring php7.3-mysql php7.3-odbc \
            php7.3-opcache php7.3-pgsql php7.3-phpdbg php7.3-pspell php7.3-readline php7.3-recode \
            php7.3-snmp php7.3-soap php7.3-sqlite3 php7.3-sybase php7.3-tidy php7.3-xml \
            php7.3-xmlrpc php7.3-xsl php7.3-zip php7.4 php7.4-bcmath php7.4-bz2 php7.4-cgi \
            php7.4-cli php7.4-common php7.4-curl php7.4-dba php7.4-dev php7.4-enchant php7.4-fpm \
            php7.4-gd php7.4-gmp php7.4-imap php7.4-interbase php7.4-intl php7.4-json php7.4-ldap \
            php7.4-mbstring php7.4-mysql php7.4-odbc php7.4-opcache php7.4-pgsql php7.4-phpdbg \
            php7.4-pspell php7.4-readline php7.4-snmp php7.4-soap php7.4-sqlite3 php7.4-sybase \
            php7.4-tidy php7.4-xml php7.4-xmlrpc php7.4-xsl php7.4-zip php-amqp php-apcu \
            php-igbinary php-memcache php-memcached php-mongodb php-redis php-xdebug \
            php-zmq snmp pollinate libpq-dev postgresql-client powershell ruby-full \
            sphinxsearch subversion mongodb-org -yq >/dev/null 2>&1
          sudo apt-get autoremove -y >/dev/null 2>&1
          sudo apt-get autoclean -y >/dev/null 2>&1
          sudo rm -rf /usr/local/lib/android >/dev/null 2>&1
          docker rmi $(docker image ls -aq) >/dev/null 2>&1
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Running Script To Get Job Info To md File
        env:
          MD_FILE_NAME: markdown_file
          GH_TOKEN: ${{ github.token }}
        run: |
          python3 beamline_status_to_md.py -p "${{ inputs.version }}" -a "${{ github.run_id }}" -m "$MD_FILE_NAME"
          cat "$MD_FILE_NAME.md"
          cp "$MD_FILE_NAME.md" $GITHUB_STEP_SUMMARY